apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: user-service
    methodology: gitops
    pipeline-type: argocd
    research-phase: multicloud-gitops-research
    managed-by: argocd
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 # Keep old pod running during update
      maxSurge: 1 # Allow 1 new pod to be created
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        methodology: gitops
        pipeline-type: argocd
    spec:
      containers:
        - name: user-service
          image: kousaila/user-service:gitops-00ec405
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: "postgresql+asyncpg://neondb_owner:npg_8kBPvMTquH2m@ep-cold-breeze-aedi5hre-pooler.c-2.us-east-2.aws.neon.tech/neondb"  # ‚Üê UPDATED: External Neon PostgreSQL
            - name: SECRET_KEY
              value: your-super-secret-jwt-key-change-in-production
            - name: ALGORITHM
              value: HS256
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              value: "30"
            - name: CORS_ORIGINS
              value: "http://localhost:3000,http://127.0.0.1:3000,http://127.0.0.1:50951"
            # Removed all internal PostgreSQL connection variables
          ports:
            - containerPort: 9090
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          # Added health checks for better reliability
          livenessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
    methodology: gitops
    managed-by: argocd
spec:
  selector:
    app: user-service
  ports:
    - port: 9090
      targetPort: 9090
  type: NodePort