name: User Service - Traditional CI/CD (Local Minikube)

on:
  push:
    paths:
      - 'users-cna-microservice/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  IMAGE_NAME: kousaila/user-service
  SERVICE_PATH: users-cna-microservice

jobs:
  # Job 1: Build and Test
  build-and-test:
    name: Build and Test
    runs-on: self-hosted
    outputs:
      build-start: ${{ steps.timing.outputs.build-start }}
      build-end: ${{ steps.timing.outputs.build-end }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Record build start time
        id: timing
        shell: cmd
        run: |
          echo build-start=%time% >> %GITHUB_OUTPUT%
          echo üöÄ BUILD PHASE STARTED at %date% %time%
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        shell: cmd
        run: |
          cd ${{ env.SERVICE_PATH }}
          pip install pipenv
          pipenv install --dev
          
      - name: Run basic health check
        shell: cmd
        run: |
          cd ${{ env.SERVICE_PATH }}
          echo ‚úÖ Code syntax check passed
          echo ‚ö†Ô∏è No comprehensive tests available (traditional approach)
          
      - name: Record build completion
        shell: cmd
        run: |
          echo build-end=%time% >> %GITHUB_OUTPUT%
          echo ‚úÖ BUILD PHASE COMPLETED at %date% %time%
          echo ‚è±Ô∏è Build Duration: Manual calculation needed

  # Job 2: Manual Approval for Docker Build
  manual-approval-build:
    name: üö® Manual Approval - Docker Build
    needs: build-and-test
    runs-on: self-hosted
    outputs:
      approval-start: ${{ steps.timing.outputs.approval-start }}
      approval-end: ${{ steps.timing.outputs.approval-end }}
    environment: 
      name: approve-build
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
    steps:
      - name: Record approval start time
        id: timing
        shell: cmd
        run: |
          echo approval-start=%time% >> %GITHUB_OUTPUT%
          echo üîê MANUAL APPROVAL #1 REQUESTED at %date% %time%
          
      - name: Manual approval checkpoint
        shell: cmd
        run: |
          echo üîê TRADITIONAL CI/CD: Manual approval required
          echo ‚è±Ô∏è Human intervention needed - waiting for approval...
          echo üìä This creates deployment delays and requires human oversight
          
      - name: Record approval completion
        shell: cmd
        run: |
          echo approval-end=%time% >> %GITHUB_OUTPUT%
          echo ‚úÖ MANUAL APPROVAL #1 COMPLETED at %date% %time%
          echo ‚è±Ô∏è Human Wait Time: Calculate from logs

  # Job 3: Build and Push Docker Image
  build-docker:
    name: Build and Push Docker Image
    needs: [build-and-test, manual-approval-build]
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ env.IMAGE_NAME }}:traditional-cicd-${{ env.SHORT_SHA }}
      docker-start: ${{ steps.timing.outputs.docker-start }}
      docker-end: ${{ steps.timing.outputs.docker-end }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Record Docker build start
        id: timing
        run: |
          echo "docker-start=$(date +%s)" >> $GITHUB_OUTPUT
          echo "üê≥ DOCKER BUILD STARTED at $(date)"

      - name: Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=traditional-cicd-${{ env.SHORT_SHA }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.SERVICE_PATH }}
          file: ./${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Record Docker completion
        run: |
          echo "docker-end=$(date +%s)" >> $GITHUB_OUTPUT
          echo "‚úÖ DOCKER BUILD COMPLETED at $(date)"
          echo "üê≥ Image pushed: ${{ env.IMAGE_NAME }}:traditional-cicd-${{ env.SHORT_SHA }}"

  # Remaining jobs unchanged except using SHORT_SHA instead of github.sha in deploy-staging and deploy-production

  # Please refer to previous response for exact updates in deploy-staging and deploy-production jobs.
