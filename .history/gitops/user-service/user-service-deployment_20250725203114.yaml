# =============================================================================
# GITOPS-OPTIMIZED USER SERVICE DEPLOYMENT
# ESI-SBA Thesis Research - GitOps vs Traditional CI/CD Comparison
# Phase 3: GitOps Implementation with ArgoCD
# =============================================================================

---
# User Service Deployment with GitOps Optimizations
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: user-service
    methodology: gitops
    pipeline-type: argocd
    research-phase: phase3-gitops
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        methodology: gitops
        pipeline-type: argocd
    spec:
      containers:
        - name: user-service
          image: kousaila/user-service:<GITOPS_TAG>
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              value: postgresql+asyncpg://admin:password123@postgresql:5432/userdb
            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: userdb
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: password123
            - name: SECRET_KEY
              value: your-super-secret-jwt-key-change-in-production
            - name: ALGORITHM
              value: HS256
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              value: "30"
            - name: CORS_ORIGINS
              value: "http://localhost:3000,http://127.0.0.1:3000,http://127.0.0.1:50951"
          ports:
            - containerPort: 9090
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 9090
            initialDelaySeconds: 5
            periodSeconds: 5

---
# User Service Service with GitOps Labels
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: user-service
  labels:
    app: user-service
    component: application-service
    service: user-service
    # GitOps Methodology Labels
    methodology: gitops
    pipeline-type: argocd
    deployment-approach: declarative
    managed-by: argocd
    version-series: "7.0.1.x"
    # Standard Kubernetes Labels
    app.kubernetes.io/name: user-service
    app.kubernetes.io/instance: user-service
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: user-service
    app.kubernetes.io/managed-by: argocd
  annotations:
    # ArgoCD Service Annotations
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: "Prune=true"
    # GitOps Research Annotations
    gitops.research/service-type: "application"
    gitops.research/deployment-method: "declarative"
    gitops.research/load-balancer-type: "cluster-ip"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: http
      protocol: TCP
  selector:
    app: user-service
    component: application
  sessionAffinity: None

---
# User Service ConfigMap for GitOps Configuration Management
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service-config
  namespace: user-service
  labels:
    app: user-service
    component: application-config
    service: user-service
    methodology: gitops
    pipeline-type: argocd
    managed-by: argocd
    version-series: "7.0.1.x"
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    gitops.research/config-type: "application-configuration"
data:
  app.properties: |
    # User Service Configuration for GitOps Research Environment
    # Version Series: 7.0.1.x

    # Application Settings
    app.name=user-service
    app.version=7.0.1.1
    app.environment=gitops-research
    app.deployment.method=argocd-declarative

    # Research Configuration
    research.phase=phase3-gitops
    research.methodology=gitops
    research.automation.level=100
    research.manual.interventions=0

    # Performance Settings
    app.thread.pool.size=10
    app.connection.timeout=30000
    app.request.timeout=60000

    # Monitoring Configuration
    metrics.enabled=true
    metrics.endpoint=/metrics
    health.check.endpoint=/health

    # GitOps Specific Settings
    gitops.sync.enabled=true
    gitops.rollback.enabled=true
    gitops.version.strategy=semantic

  logging.conf: |
    # Logging configuration for GitOps research
    [loggers]
    keys=root,uvicorn,fastapi

    [handlers]
    keys=console,file

    [formatters]
    keys=generic

    [logger_root]
    level=INFO
    handlers=console,file
    qualname=

    [logger_uvicorn]
    level=INFO
    handlers=console,file
    qualname=uvicorn
    propagate=0

    [logger_fastapi]
    level=INFO
    handlers=console,file
    qualname=fastapi
    propagate=0

    [handler_console]
    class=StreamHandler
    args=(sys.stdout,)
    level=INFO
    formatter=generic

    [handler_file]
    class=FileHandler
    args=('/tmp/user-service.log',)
    level=INFO
    formatter=generic

    [formatter_generic]
    format=[GitOps-Research] %(asctime)s [%(levelname)s] %(name)s: %(message)s
    datefmt=%Y-%m-%d %H:%M:%S

---
# Horizontal Pod Autoscaler for GitOps Scalability
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: user-service-hpa
  namespace: user-service
  labels:
    app: user-service
    component: autoscaler
    methodology: gitops
    pipeline-type: argocd
    managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    gitops.research/scaling-strategy: "horizontal"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: user-service-deployment
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
