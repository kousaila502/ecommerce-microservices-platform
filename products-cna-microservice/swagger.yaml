openapi: 3.0.0
info:
  title: Products & Deals Service API
  description: Microservice for managing products and deals
  version: 1.0.0
  contact:
    name: API Support
    email: support@ecommerce.com

servers:
  - url: http://localhost:3001
    description: Development server
  - url: https://34.95.5.30.nip.io
    description: Production server

paths:
  # PRODUCTS ENDPOINTS
  /products:
    get:
      tags: [Products]
      summary: Get all products
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: department
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
    post:
      tags: [Products]
      summary: Create new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreate"
      responses:
        201:
          description: Product created successfully

  /products/stats:
    get:
      tags: [Products]
      summary: Get product statistics
      responses:
        200:
          description: Product statistics

  /products/{id}:
    get:
      tags: [Products]
      summary: Get product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
        404:
          description: Product not found

  # DEALS ENDPOINTS
  /deals:
    get:
      tags: [Deals]
      summary: Get all deals
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: department
          in: query
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  count:
                    type: integer
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Deal"
    post:
      tags: [Deals]
      summary: Create new deal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DealCreate"
      responses:
        201:
          description: Deal created successfully

  /deals/seed:
    post:
      tags: [Deals]
      summary: Seed deals from sample data
      responses:
        201:
          description: Deals seeded successfully

  /deals/stats:
    get:
      tags: [Deals]
      summary: Get deal statistics
      responses:
        200:
          description: Deal statistics

  /deals/search/{term}:
    get:
      tags: [Deals]
      summary: Search deals
      parameters:
        - name: term
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: Search results

  /deals/top-rated:
    get:
      tags: [Deals]
      summary: Get top rated deals
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Top rated deals

  /deals/{id}:
    get:
      tags: [Deals]
      summary: Get deal by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Success
        404:
          description: Deal not found
    put:
      tags: [Deals]
      summary: Update deal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DealUpdate"
      responses:
        200:
          description: Deal updated successfully
    delete:
      tags: [Deals]
      summary: Delete deal (soft delete)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Deal deleted successfully

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: integer
        sku:
          type: string
        title:
          type: string
        price:
          type: number
        department:
          type: string
        rating:
          type: number
        stock:
          type: integer
        isActive:
          type: boolean

    ProductCreate:
      type: object
      required: [title, sku, price, department]
      properties:
        title:
          type: string
        sku:
          type: string
        price:
          type: number
        department:
          type: string
        description:
          type: string
        stock:
          type: integer
        rating:
          type: number

    Deal:
      type: object
      properties:
        dealId:
          type: integer
        productId:
          type: integer
        title:
          type: string
        description:
          type: string
        price:
          type: number
        department:
          type: string
        rating:
          type: number
        currency:
          type: string
        isActive:
          type: boolean
        lastUpdated:
          type: string
          format: date-time

    DealCreate:
      type: object
      required: [productId, title, description, price, department]
      properties:
        productId:
          type: integer
        title:
          type: string
        description:
          type: string
        price:
          type: number
        department:
          type: string
        variantSku:
          type: string
        rating:
          type: number
        currency:
          type: string

    DealUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        rating:
          type: number

tags:
  - name: Products
    description: Product management operations
  - name: Deals
    description: Deal management operations
